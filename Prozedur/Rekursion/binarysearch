def quickso(a):
    if len(a) < 2:
        return a
    else:
        p = a[0]
        al = []
        ar = []
        for i in range(1, len(a)):
            if a[i] < p:
                al.append(a[i])
            else:
                ar.append(a[i])
        al = quickso(al)
        ar = quickso(ar)
        return al + [p] + ar
    
import random

count = 1000
nums = [None] * count
for i in range(count):
        nums[i] = random.randrange(1000)
nums = quickso(nums)


d = random.randrange(1000)

def binsearch(a, d):
    min = 0
    max = len(a) - 1
    while min <= max:
        zw = (min + max) // 2
        if a[zw] == d:
            print("Du hast die richtige Zahl " + str(d) + " aufgedeckt")
            return zw
        elif a[zw] < d:
            min = zw + 1
        else:
            max = zw - 1
        if min == max:
            print("Du hast die falsche Zahl " + str(zw) + " gefunden")
            return zw
        if min > max:
            print("Die gesuchte Zahl " + str(d) + " ist nicht vorhanden")
            return zw
    return -1

binsearch(nums, d)